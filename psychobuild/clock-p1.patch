--- a/arch/arm/mach-msm/clock-8x60.c	2011-08-02 16:04:21.000000000 -0400
+++ b/arch/arm/mach-msm/clock-8x60.c	2011-09-11 11:21:39.000000000 -0400
@@ -28,6 +28,7 @@
 #include <mach/clk.h>
 #include <mach/msm_xo.h>
 #include <mach/scm-io.h>
+#include <linux/clk.h>
 
 #include "clock-local.h"
 #include "clock-8x60.h"
@@ -2607,7 +2608,25 @@
 
 static int msm_clk_soc_late_init(void)
 {
-	return local_unvote_sys_vdd(HIGH);
+      int rc;
+
+      /* Vote for MMFPB to be at least 64MHz when an Apps CPU is active. */
+      struct clk *mmfpb_a_clk = clk_get(NULL, "mmfpb_a_clk");
+      if (WARN(IS_ERR(mmfpb_a_clk), "mmfpb_a_clk not found (%ld)\n",
+                      PTR_ERR(mmfpb_a_clk)))
+              return PTR_ERR(mmfpb_a_clk);
+      rc = clk_set_min_rate(mmfpb_a_clk, 64000000);
+      if (WARN(rc, "mmfpb_a_clk rate was not set (%d)\n", rc))
+              return rc;
+      rc = clk_enable(mmfpb_a_clk);
+      if (WARN(rc, "mmfpb_a_clk not enabled (%d)\n", rc))
+              return rc;
+
+      /* Remove temporary vote for HIGH vdd_dig. */
+      rc = local_unvote_sys_vdd(HIGH);
+      WARN(rc, "local_unvote_sys_vdd(HIGH) failed (%d)\n", rc);
+
+      return rc;
 }
 late_initcall(msm_clk_soc_late_init);
 

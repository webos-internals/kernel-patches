--- a/arch/arm/Kconfig	2011-11-06 11:44:37.000000000 -0500
+++ b/arch/arm/Kconfig	2011-11-06 13:45:01.000000000 -0500
@@ -730,6 +730,16 @@
           Scorpion processor supported hardware performace counters on a per
           thread basis or AXI counters on an overall system basis.
 
+config ALLOW_CPU_ALIGNMENT
+	bool "Allow CPU-based alignment handling"
+	default y
+	help
+	  Advanced ARM processors, such as the Cortex series and ARMv7-based
+	  CPUS are capable of performing unaligned accesses for many types of
+	  memory accesses.  Typically, using a cpu-based alignment fixup is
+	  faster than doing such a fixup in software.  For best performance
+	  on advanced CPUs, say Y here.
+
 endmenu
 
 source "arch/arm/common/Kconfig"
--- a/arch/arm/kernel/head-nommu.S	2009-03-23 19:12:14.000000000 -0400
+++ b/arch/arm/kernel/head-nommu.S	2011-11-06 13:46:54.000000000 -0500
@@ -60,10 +60,10 @@
 __after_proc_init:
 #ifdef CONFIG_CPU_CP15
 	mrc	p15, 0, r0, c1, c0, 0		@ read control reg
-#ifdef CONFIG_ALIGNMENT_TRAP
-	orr	r0, r0, #CR_A
+#ifdef CONFIG_ALLOW_CPU_ALIGNMENT
+i	bic     r0, r0, #CR_A
 #else
-	bic	r0, r0, #CR_A
+	orr     r0, r0, #CR_A
 #endif
 #ifdef CONFIG_CPU_DCACHE_DISABLE
 	bic	r0, r0, #CR_C
--- a/arch/arm/kernel/head.S	2011-11-06 11:44:37.000000000 -0500
+++ b/arch/arm/kernel/head.S	2011-11-06 13:45:01.000000000 -0500
@@ -154,10 +154,10 @@
  * registers.
  */
 __enable_mmu:
-#ifdef CONFIG_ALIGNMENT_TRAP
-	orr	r0, r0, #CR_A
-#else
+#ifdef CONFIG_ALLOW_CPU_ALIGNMENT
 	bic	r0, r0, #CR_A
+#else
+	orr	r0, r0, #CR_A
 #endif
 #ifdef CONFIG_CPU_DCACHE_DISABLE
 	bic	r0, r0, #CR_C
